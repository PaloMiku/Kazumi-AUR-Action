name: Auto Update AUR Package

on:
  schedule:
    - cron: "0 16 * * *"
  workflow_dispatch: 

jobs:
  update-aur:
    runs-on: ubuntu-latest
    env:
      API_URL: "https://api.github.com/repos/Predidit/Kazumi/releases/latest"
    steps:
      - name: Checkout AUR Repository
        uses: actions/checkout@v4

      - name: Get Latest Release Version from Upstream
        id: get_release
        run: |
          LATEST_TAG=$(curl -s $API_URL | jq -r '.tag_name')
          echo "Latest release tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Extract Current pkgver from PKGBUILD
        id: get_pkgver
        run: |
          CURRENT_PKGVER=$(grep -oP '^pkgver=\K.*' PKGBUILD)
          echo "Current pkgver in PKGBUILD: $CURRENT_PKGVER"
          echo "current_pkgver=$CURRENT_PKGVER" >> $GITHUB_ENV

      - name: Check if Update is Needed
        id: check_update
        run: |
          if [ "${{ env.latest_tag }}" = "${{ env.current_pkgver }}" ]; then
            echo "No update required."
            echo "update_needed=false" >> $GITHUB_ENV
          else
            echo "Update required: new version ${{ env.latest_tag }} found (current: ${{ env.current_pkgver }})"
            echo "update_needed=true" >> $GITHUB_ENV
          fi

      - name: Update PKGBUILD if New Version Found
        if: env.update_needed == 'true'
        run: |
          sed -i "s/^pkgver=.*/pkgver=${{ env.latest_tag }}/" PKGBUILD
          
          # sed -i "s|/archive/.*\.tar\.gz|/archive/${{ env.latest_tag }}.tar.gz|" PKGBUILD

          updpkgsums

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git commit -am "Update to version ${{ env.latest_tag }}"
          git push origin HEAD

      - name: Publish Package to AUR
        if: env.update_needed == 'true'
        uses: KSXGitHub/github-actions-deploy-aur@v4
        with:
          pkgname: "Kazumi" 
          commit_username: "PaloMiku"
          commit_email: "palomiku@outlook.com"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
